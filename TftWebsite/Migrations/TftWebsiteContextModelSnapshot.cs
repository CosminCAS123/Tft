// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TftWebsite.Data;

#nullable disable

namespace TftWebsite.Migrations
{
    [DbContext(typeof(TftWebsiteContext))]
    partial class TftWebsiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TftWebsite.Models.Champion", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.HasIndex("TeamName");

                    b.ToTable("AllChampions");
                });

            modelBuilder.Entity("TftWebsite.Models.Team", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("TftWebsite.Models.Trait", b =>
                {
                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<string>("ChampionName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.HasIndex("ChampionName");

                    b.ToTable("Traits");
                });

            modelBuilder.Entity("TftWebsite.Models.Champion", b =>
                {
                    b.HasOne("TftWebsite.Models.Team", null)
                        .WithMany("Champions")
                        .HasForeignKey("TeamName");
                });

            modelBuilder.Entity("TftWebsite.Models.Trait", b =>
                {
                    b.HasOne("TftWebsite.Models.Champion", null)
                        .WithMany("Traits")
                        .HasForeignKey("ChampionName");
                });

            modelBuilder.Entity("TftWebsite.Models.Champion", b =>
                {
                    b.Navigation("Traits");
                });

            modelBuilder.Entity("TftWebsite.Models.Team", b =>
                {
                    b.Navigation("Champions");
                });
#pragma warning restore 612, 618
        }
    }
}
